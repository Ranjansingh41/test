pipelines:
#   - name: Pipelines
#     steps:
#       - name: Pipeline_test1112
#         type: Bash
# #         configuration:
# #           nodePool: u16dynamic
# #         stepMode: Bash
# #         stepletMultipliers:
# #           environmentVariables:
# #             - env1: one
# #               env2: two
#         execution:
#           onStart:
#             - echo "pipelines state working" >> ${steplet_id}_pipelines_files
#             - add_pipeline_files ${steplet_id}_pipelines_files test_pipelines_files
#             - echo "add_cache_files working" >> ${steplet_id}_cache_file
#             - add_cache_files ${steplet_id}_cache_file test_cache_files
#             - echo "add_run_files working" >> ${steplet_id}_run_file
#             - add_run_files ${steplet_id}_run_file test_run_files
#             - mkdir -p cache_files_dir
#             - mkdir -p pipeline_files_dir
#             - mkdir -p run_files_dir
#             - echo "pipelines state working" >> ./pipeline_files_dir/${steplet_id}_pipelines_files
#             - add_pipeline_files pipeline_files_dir pipeline_files_dir
#             - echo "add_cache_files working" >> ./cache_files_dir/${steplet_id}_cache_file
#             - add_cache_files cache_files_dir cache_files_dir
#             - echo "add_run_files working" >> ./run_files_dir/${steplet_id}_run_file
#             - add_run_files run_files_dir run_files_dir
#           onExecute:
#             - mkdir -p testing
#             - restore_pipeline_files test_pipelines_files ./testing/.
#             - restore_cache_files test_cache_files ./testing/.
#             - restore_run_files test_run_files ./testing/.
#             - ls -l ./testing/. 
#             - mkdir -p temp1
#             - restore_pipeline_files pipeline_files_dir ./temp1/.
#             - restore_cache_files cache_files_dir ./temp1/.
#             - restore_run_files run_files_dir ./temp1/.
#             - ls -l ./temp1/.
          
            
  - name: Pipelines_test
    steps:
      - name: api_Pipeline
        type: Matrix
        stepMode: Bash
        stepletMultipliers:
          environmentVariables:
            - env1: one
              env2: two
            - env1: three
              env2: four
          runtimes:
            - type: image
              image:
                auto:
                  language: java
                  versions:
                    - 13
            - type: image
              image:
                auto:
                  language: java
                   versions:
                     - 8
#           - type: image
#           image:
#           auto:
#             language: java
#             versions:
#               - 11 runtimes:
#           - type: image
#           image:
#           auto:
#             language: java
#             versions:
#               - 13
#           - type: image
#           image:
#           auto:
#             language: java
#             versions:
#               - 8
#           - type: image
#           image:
#           auto:
#             language: java
#             versions:
#               - 11
# #         stepletMultipliers:
#           environmentVariables:
#             - env1: one
#               env2: two      
        execution:
          onExecute:
            - echo "Env1=$env1"
            - echo "Env2=$env2"
            - echo "executing step..."  
     
#       - name: api_Pipeline1
#         type: Matrix
#         stepMode: Bash
#         configuration:
#           inputSteps:
#             - name: api_Pipeline
# #         stepletMultipliers:
# #           environmentVariables:
# #             - env1: one
# #               env2: two
#         execution:
#           onExecute:
#             - echo "executing step..."  
     
#   - name: Pipelines_IdentityF_member
#     steps:
#       - name: api_PipelineMatrixSteps
#         type: Matrix
#         stepMode: Bash
#         stepletMultipliers:
#           environmentVariables:
#             - env1: one
#               env2: two
#         execution:
#           onExecute:
#             - echo "executing step..."    

# resources:
#   - name: MyGitRepo
#     type: GitRepo
#     configuration:
#       path: Ranjansingh41/test
#       gitProvider: ranjan_github
# #       branches: 
# #         include: master
# #       files:  
# #         include: Affinitygroup.yml
# pipelines:
#   - name: sample_AffinitygroupConnections
#     steps:
#       - name: my_StepConnections
#         type: Bash
# #         stepMode: Bash
#         configuration:
#           inputResources:
#             - name: MyGitRepo
# #         matrix:
# #           environmentVariables:
# #             - env1: one
# #               env2: two    
#         execution:
#           onExecute:
#             - echo "hi"
#       - name: stepnum_one
#         type: Matrix
#         stepMode: Bash
#         configuration: 
#           inputSteps:
#             - name: my_StepConnections
#           affinityGroup: new_client
#           inputResources:
#             - name: MyGitRepo
#         matrix:
#           environmentVariables:
#             - env1: one
#               env2: two     
#         execution:
#           onExecute:
#             - echo "hi" 
#       - name: stepnum_two
#         type: Matrix
#         stepMode: Bash
#         configuration: 
#           inputSteps:
#             - name: stepnum_one
#           affinityGroup: new_client
#           inputResources:
#             - name: MyGitRepo
#         matrix:
#           environmentVariables:
#             - env1: one
#               env2: two     
#         execution:
#           onExecute:
#             - echo "hi"   
#       - name: stepnum_three
#         type: Matrix
#         stepMode: Bash
#         configuration: 
#           inputSteps:
#             - name: stepnum_two #stepnum_one
#           affinityGroup: new_client
#           inputResources:
#             - name: MyGitRepo
#         matrix:
#           environmentVariables:
#             - env1: one
#               env2: two     
#         execution:
#           onExecute:
#             - echo "hi"  
#       - name: stepnum_four
#         type: Bash
#         configuration: 
#           inputSteps:
#             - name: stepnum_three
#           affinityGroup: new_client
#           inputResources:
#             - name: MyGitRepo
#         execution:
#           onExecute:
#             - echo "hi"      
#       - name: auto_one
#         type: Matrix
#         stepMode: Bash
#         configuration: 
#           inputSteps:
#             - name: my_StepConnections
#           affinityGroup: my_group
#           inputResources:
#             - name: MyGitRepo
#         matrix:
#           environmentVariables:
#             - env1: one
#               env2: two     
#         execution:
#           onExecute:
#             - echo "hi"    
#       - name: auto_two
#         type: Matrix
#         stepMode: Bash
#         configuration: 
#           inputSteps:
#             - name: auto_one
#           affinityGroup: my_group
#           inputResources:
#             - name: MyGitRepo
#         matrix:
#           environmentVariables:
#             - env1: one
#               env2: two     
#         execution:
#           onExecute:
#             - echo "hi"  
#       - name: auto_three
#         type: Matrix
#         stepMode: Bash
#         configuration: 
#           inputSteps:
#             - name: auto_two
#           affinityGroup: my_group
#           inputResources:
#             - name: MyGitRepo
#         matrix:
#           environmentVariables:
#             - env1: one
#               env2: two     
#         execution:
#           onExecute:
#             - echo "hi"  



# resources:
#   - name: test
#     type: GitRepo
#     configuration:
#       gitProvider: ranjan_github
#       path: Ranjansingh41/test
#       branches:
#         include: matrixSteps
# pipelines:
#   - name: pipeline_test
#     steps:
#       - name: matrix_build_fanout_test
#         type: FanOut
# #         configuration:
# #           inputResources:
# #             - name: test
#         execution:
#           onStart:
#             - echo "from onStart"
#           onExecute:
#             - echo "this is a fanout step"
#           onSuccess:
#             - echo "from onSuccess"
#           onFailure:
#             - echo "from onFailure"
#           onComplete:
#             - echo "from onComplete"
#       - name: matrix_var_test
#         type: Matrix
#         stepMode: Bash
#         configuration:
#           inputSteps:
#             - name: matrix_build_fanout_test
#         execution:
#           onStart:
#             - echo "hello from onStart"
#           onExecute:
#             - echo "hello from onExecute"
#           onSuccess:
#             - echo "hello  from onSuccess"
#           onFailure:
#             - echo "hello from OnFailure"
#           onComplete:
#             - echo "hello from Oncomplete"
#         matrix:
#           environmentVariables:
#             - env1: one
#               env2: two
#               env3: three
#             - env1: changed1
#               env2: changed2
#         runtimes:
#           - type: image
#             image:
#               auto:
#                 language: java
#                 version:
#                   - 13
#           - type: image        
#             image:
#               auto:
#                 language: nodejs
#                 version:
#                   - 8.17.0
#       - name: matrix_fanin_var_test
#         type: FanIn
#         configuration:
#           inputSteps:
#             - name: matrix_var_test
#         execution:
#           onStart:
#             - echo "from onStart"
#           onExecute:
#             - echo "this is a fanin step"
#           onSuccess:
#             - echo "from onSuccess"
#           onFailure:
#             - echo "from onFailure"
#           onComplete:
#             - echo "from onComplete"


# resources:
#   - name: test_outgoingWebhookResource #resource name
#     type: OutgoingWebhook 
#     configuration:
#       webhookName: outgoing #integration
#       method: GET    #POST # optional, defaults to POST
#       parameters: name="test" # optional
# #       path: "/api/v1/issues" # optional 
#       headers: # optional
#         Content-type: application/json 

# pipelines:
#   - name: pipelineSyncStatus_automation
#     steps:
#       - name: api_pipelineSyncStatus
#         type: Bash
#         configuration:
#           outputResources:
#             - name: test_outgoingWebhookResource
# #            inputResources: # optional
# #              - name: test_outgoingWebhookResource 
#           integrations:
#             - name: outgoing
#         execution:
#           onExecute:
#             - set_payload testS_outgoingWebhookResource "{\"test\":\"onExecute\"}"
#           onSuccess:
#             - set_payload test_outgoingWebhookResource "{\"test\":\"onSuccess\"}"
#           onFailure:
#             - set_payload test_outgoingWebhookResource "{\"test\":\"onFailure\"}"
# #           onComplete: #always
# #             - set_payload test_outgoingWebhookResource "{\"test\":\"onComplete\"}"
# #           onCancel: 
# #             - set_payload test_outgoingWebhookResource "{\"test\":\"onCancel\"}"


  


# resources:
#   - name: ranjan_go_build_publish
#     type: BuildInfo
#     configuration:
#       sourceArtifactory: s_artifactory
#       buildName: go_example_build_publish_varsha
#       buildNumber: 32
      
#   - name: ranjan_artifactory_go_module_example
#     type: GitRepo
#     configuration:
#       path: Ranjansingh41/artifactory-go-example
#       branches:
#         include: master
#       gitProvider: ranjan_github
      
#   - name: go_build_info_publish_moduletestss
#     type: BuildInfo
#     configuration:
#       sourceArtifactory: s_artifactory
#       buildName: go_example_module_publish_varsha
#       buildNumber: 332
#   - name: promoted_go_build_info_go_publishtestss
#     type: BuildInfo
#     configuration:
#       sourceArtifactory: s_artifactory
#       buildName: promote_go_build_info_publish
#       buildNumber: 35
#   - name: artifactory_go_exampletestss
#     type: GitRepo
#     configuration:
#       path: Ranjansingh41/project-examples
#       branches:
#         include: master
#       gitProvider: ranjan_github
      
# pipelines:      
#   - name: ranjna_goBuildtest
# #     configuration:
# #       nodePool: win_2019
#     steps:
#       - name: build_gotest
#         type: GoBuild
#         configuration:
#           sourceLocation: golang-example/hello
#           repository: test-go-local
#           outputLocation: /tmp/dist
#           outputFile: hello_varsha
#           inputResources:
#             - name: artifactory_go_exampletestss
#           integrations:
#             - name: s_artifactory
#         execution:
#           onStart:
#             - go version
            
#       - name: publish_go_binarytest
#         type: GoPublishBinary
#         configuration:
#           inputSteps:
#             - name: build_gotest
#           targetRepository: test-go-local
#           integrations:
#             - name: s_artifactory
#         execution:
#           onStart:
#             - printenv 
#       - name: publish_buildtest
#         type: PublishBuildInfo
#         configuration:
#           inputSteps:
#             - name: publish_go_binarytest
#           outputResources:
#             - name: ranjan_go_build_publish
            
#       - name: publish_go_moduletest
#         type: GoPublishModule
#         execution:
#           onStart:
#             - go version
#         configuration:
#           sourceLocation: .
#           version: v0.0.0
#           targetRepository: test-go-local
#           autoPublishBuildInfo: true
#           integrations:
#             - name: s_artifactory
#           inputResources:
#             - name: ranjan_artifactory_go_module_example
#           outputResources:
#             - name: go_build_info_publish_moduletestss
            
#       - name: promote_build_gotest_binary
#         type: PromoteBuild
#         configuration:
#           targetRepository: test-generic-local
#           integrations:
#             - name: s_artifactory
#           inputResources:
#             - name: ranjan_go_build_publish
#           outputResources:
#             - name: promoted_go_build_info_go_publishtestss

#       - name: promote_build_gotest_module
#         type: PromoteBuild
#         configuration:
#           targetRepository: test-generic-local
#           integrations:
#             - name: s_artifactory
#           inputResources:
#             - name: go_build_info_publish_moduletestss
#           outputResources:
#             - name: promoted_go_build_info_go_publishtestss     
      
      


# # pipelines:
# #   - name: u18nodetest
# #     steps:
# #       - name: test
# #         type: Bash
# # #         configuration: 
# # #           nodePool: u18-gcp-us-east1
# # #           runtime:
# # #             type: host
# #         execution:
# #           onExecute:
# #             - echo "Hi"
#             #images should be in this order it self
# #             - images=(docker.bintray.io/jfrog/pipelines-u18go docker.bintray.io/jfrog/pipelines-u18node docker.bintray.io/jfrog/pipelines-u18java docker.bintray.io/jfrog/pipelines-u18cpp)
# #             - javatags=(8 11 13)
# #             - gotags=(1.13.7 1.12.14 1.11.13)
# #             - nodetags=(10.18.0 12.14.0 10.18.0)
# #             - cpptags=(8.0.0 9.0.0)
# #             - for docker_images in "${images[@]}"; do case "$docker_images" in "${images[0]}") for tags in "${gotags[@]}"; do  docker images | grep $docker_images | grep $tags ; done ;; "${images[1]}") for tags in "${nodetags[@]}"; do  docker images | grep $docker_images | grep $tags ; done ;;  "${images[2]}") for tags in "${javatags[@]}"; do  docker images | grep $docker_images | grep $tags ; done ;; "${images[3]}") for tags in "${cpptags[@]}"; do  docker images | grep $docker_images | grep $tags ; done ;;  esac; done


# # resources:
# #   - name: MyGitRepo
# #     type: GitRepo
# #     configuration:
# #       path: Ranjansingh41/test
# #       gitProvider: github
# #       branches: 
# #         include: master
# #       files:  
# #         include: Affinitygroup.yml
# # pipelines:
# #   - name: sample_AffinitygroupConnections
# #     steps:
# #       - name: my_StepConnections
# #         type: Bash
# #         configuration:
# #           inputResources:
# #             - name: MyGitRepo
# #         execution:
# #           onExecute:
# #             - echo "hi"
# #       - name: stepnum_one
# #         type: Bash
# #         configuration: 
# #           inputSteps:
# #             - name: my_StepConnections
# #           affinityGroup: new_client
# #           inputResources:
# #             - name: MyGitRepo
# #         execution:
# #           onExecute:
# #             - echo "hi" 
# # #       - name: stepnum_two
# # #         type: Bash
# # #         configuration: 
# # #           inputSteps:
# # #             - name: stepnum_one
# # #           affinityGroup: new_client
# # #           inputResources:
# # #             - name: MyGitRepo
# # #         execution:
# # #           onExecute:
# # #             - echo "hi"   
# #       - name: stepnum_three
# #         type: Bash
# #         configuration: 
# #           inputSteps:
# #             - name: stepnum_one #stepnum_two 
# #           affinityGroup: new_client
# #           inputResources:
# #             - name: MyGitRepo
# #         execution:
# #           onExecute:
# #             - echo "hi"  
# #       - name: stepnum_four
# #         type: Bash
# #         configuration: 
# #           inputSteps:
# #             - name: stepnum_three
# #           affinityGroup: new_client
# #           inputResources:
# #             - name: MyGitRepo
# #         execution:
# #           onExecute:
# #             - echo "hi"      
# #       - name: auto_one
# #         type: Bash
# #         configuration: 
# #           inputSteps:
# #             - name: my_StepConnections
# #           affinityGroup: my_group
# #           inputResources:
# #             - name: MyGitRepo
# #         execution:
# #           onExecute:
# #             - echo "hi"    
# #       - name: auto_two
# #         type: Bash
# #         configuration: 
# #           inputSteps:
# #             - name: auto_one
# #           affinityGroup: my_group
# #           inputResources:
# #             - name: MyGitRepo
# #         execution:
# #           onExecute:
# #             - echo "hi"  
# #       - name: auto_three
# #         type: Bash
# #         configuration: 
# #           inputSteps:
# #             - name: auto_two
# #           affinityGroup: my_group
# #           inputResources:
# #             - name: MyGitRepo
# #         execution:
# #           onExecute:
# #             - echo "hi"  



# # pipelines:
# #   - name: pipelines_S_Bash
# #     steps:
# #       - name: S_Bash5
# #         type: PowerShell
# #         configuration:
# #           nodePool: ranjan_window
# # #            inputSteps:
# # #             - name: S_Bash4
# #         execution:
# #           onExecute:
# #             - write-output "executing step..."
# # #       - name: S_Bash6
# #         type: PowerShell
# #         configuration:
# #           nodePool: ranjan_window
# # #           inputSteps:
# # #             - name: S_Bash5
# #         execution:
# #           onExecute:
# #             - write-output "executing step..."
# #       - name: S_Bash7
# #         type: PowerShell
# #         configuration:
# #           nodePool: ranjan_window
# # #           inputSteps:
# # #             - name: S_Bash6
# #         execution:
# #           onExecute:
# #             - write-output "executing step..."

  
# # resources:  
# #   - name: image
# #     type: Image
# #     configuration:
# #        registry: gcp
# #        imageName: gcr.io/ship-rc/ubuntu
# #        imageTag: latest
# #        autoPull: true  


# #   - name: git2
# #     type: GitRepo
# #     configuration:
# #       path: Ranjansingh41/test
# #       gitProvider: github

# # #   - name: S_Bash_0007_propertyBag
# # #     type: PropertyBag
# # #     configuration:
# # #       property1: "test"

# # pipelines:
# #   - name: pipelinestestbash
# #     steps:
# #       - name: test41
# #         type: Bash
# #         configuration:
# # #           nodePool: ranjan_azure
# #           inputResources:
# #             - name: git2
# #         execution:
# #           onExecute:
# #             - echo "executing step..."
# #             - echo "executing step2..."
# #             - echo "executing step3..."
            
# #       - name: test12
# #         type: Bash
# #         configuration:
# #           nodePool: ranjan_azure
# # #           inputSteps:
# # #             - name: test_aws
# #           inputResources:
# #             - name: git2
# #         execution:
# #           onExecute:
# #             - echo "executing step..."
            
# #       - name: test898
# #         type: Bash
# #         configuration:
# #           nodePool: ranjan_azure
# # #           inputSteps:
# # #             - name: test_aws
# #           inputResources:
# #             - name: git2
# #         execution:
# #           onExecute:
# #             - echo "executing step..."



